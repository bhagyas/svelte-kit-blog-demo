{"metadata":{"title":"Add Code Highlighting to Your Blog","date":"Apr 4, 2021","excerpt":"Without highlighting, code are just paragraphs of chaos..."},"content":"<p>The code highlighting part is relative isolated.</p>\n<p>As we are using the remark (unified.js) ecosystem, it' s pretty easy to add code highlighting to our markdown posts. We could simply add the <a href=\"https://highlightjs.org/\">highlight.js</a> plugin â€” <a href=\"https://github.com/rehypejs/rehype-highlight\">rehype-highlight</a> to the remark processor:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> highlight <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'rehype-highlight'</span>;\n\n<span class=\"hljs-keyword\">let</span> runner = unified()\n    .use(remark2rehype)\n    .use(highlight)\n    .use(rehypeStringify);\n</code></pre>\n<p>And the generated html would have the class names of highlight.js.</p>\n<p>Then, attach the desired style theme to the header in <code>$layout.svelte</code>. In this project, I chosed the github theme:</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">svelte:head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span>\n    <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.7.1/styles/github.min.css\"</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">svelte:head</span>></span>\n</code></pre>\n<p>And now comes the highlighted code!</p>\n<pre><code class=\"hljs language-c\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&#x3C;stdio.h></span></span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\n   <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">\"Hello, World!\"</span>);\n   <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}\n</code></pre>"}